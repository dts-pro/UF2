import{_ as u,C as r,c as p,o as c,a4 as t,j as e,G as l,w as n,a as s}from"./chunks/framework.D8ILtLtz.js";const h=JSON.parse(`{"title":"5. Representació d'Algoritmes","description":"","frontmatter":{},"headers":[],"relativePath":"2-representacio.md","filePath":"2-representacio.md"}`),d={name:"2-representacio.md"};function m(g,a,b,f,_,x){const i=r("PluginTabsTab"),o=r("PluginTabs");return c(),p("div",null,[a[5]||(a[5]=t('<h1 id="_5-representacio-d-algoritmes" tabindex="-1">5. Representació d&#39;Algoritmes <a class="header-anchor" href="#_5-representacio-d-algoritmes" aria-label="Permalink to &quot;5. Representació d&#39;Algoritmes&quot;">​</a></h1><p>És necessari poder representar les instruccions o els passos d&#39;un algoritme d&#39;una manera ordenada que es puguen entendre.</p><p>A primera vista es pot pensar que es podrien descriure els passos usant el llenguatge natural. Però el problema és que el llenguatge natural pot resultar imprecís i ambigu.</p><p>Per aquest motiu existeixen altres mètodes de representar algoritmes, començant pel pseudocodi, que ens permet expressar la lògica d&#39;un programa en un llenguatge proper al natural.</p><p>També és possible tindre una representació més visual, utilitzant metodologies com els diagrames de flux, que facilita la comprensió i comunicació dels algoritmes ja que es pot veure com les accions es comuniquen entre elles i el flux de l&#39;Algoritme.</p><h2 id="_5-1-pseudocodi" tabindex="-1">5.1 Pseudocodi <a class="header-anchor" href="#_5-1-pseudocodi" aria-label="Permalink to &quot;5.1 Pseudocodi&quot;">​</a></h2><p>El Pseudocodi és una tècnica que permet substituir les instruccions d&#39;un programa per frases que descriguen què ha de fer-se en llenguatge natural.</p><p><strong>Característiques del pseudocodi</strong></p><ul><li>Utilitza paraules i frases en lloc d&#39;instruccions de codi.</li><li>Permet descriure de manera clara i concisa els passos a seguir.</li><li>No està subjecte a les regles sintàctiques d&#39;un llenguatge de programació específic.</li><li>Facilita la comprensió i comunicació dels algoritmes.</li></ul>',9)),e("blockquote",null,[a[2]||(a[2]=e("p",null,[e("em",null,[e("strong",null,"Exemple:")])],-1)),a[3]||(a[3]=e("p",null,`En el següent exemple es poden veure dos algoritmes que indiquen si un nombre és parell o imparell. Ambdós realitzen la mateixa tasca, però l'algoritme B és més eficient que l'algoritme A. Això es deu al fet que l'algoritme B tarda un temps constant, mentre que l'algoritme A tardarà més com més gran siga el valor de "n".`,-1)),l(o,null,{default:n(()=>[l(i,{label:"Algoritme A"},{default:n(()=>a[0]||(a[0]=[e("div",{class:"language-plaintext vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"plaintext"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[e("code",null,[e("span",{class:"line"},[e("span",null,"INICI")]),s(`
`),e("span",{class:"line"},[e("span",null,'  1. Escriure "Introdueix valor per a n".')]),s(`
`),e("span",{class:"line"},[e("span",null,"  2. Llegir n.  ")]),s(`
`),e("span",{class:"line"},[e("span",null,'  3. Si n = 2 escriure "És parell"')]),s(`
`),e("span",{class:"line"},[e("span",null,'  4. Si no, si n = 1 escriure "És imparell"')]),s(`
`),e("span",{class:"line"},[e("span",null,"  5. Si no, n = n - 2 i tornem al pas 3.")]),s(`
`),e("span",{class:"line"},[e("span",null,"FI")])])])],-1)])),_:1,__:[0]}),l(i,{label:"Algoritme B"},{default:n(()=>a[1]||(a[1]=[e("div",{class:"language-plaintext vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"plaintext"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[e("code",null,[e("span",{class:"line"},[e("span",null,"INICI")]),s(`
`),e("span",{class:"line"},[e("span",null,'  1. Escriure "Introdueix valor per a n".')]),s(`
`),e("span",{class:"line"},[e("span",null,"  2. Llegir n.  ")]),s(`
`),e("span",{class:"line"},[e("span",null,"  3. M ← n % 2")]),s(`
`),e("span",{class:"line"},[e("span",null,'  4. Si M = 0, escriure "És parell"')]),s(`
`),e("span",{class:"line"},[e("span",null,'  5. Si no, escriure "És imparell"')]),s(`
`),e("span",{class:"line"},[e("span",null,"FI")])])])],-1)])),_:1,__:[1]})]),_:1}),a[4]||(a[4]=e("p",null,"En crear un algoritme, no sols és important que realitze la seua tasca, sinó que també siga eficient i consuma la menor quantitat de recursos possible.",-1))]),a[6]||(a[6]=t('<h2 id="_5-2-diagrama-de-flux" tabindex="-1">5.2 Diagrama de flux <a class="header-anchor" href="#_5-2-diagrama-de-flux" aria-label="Permalink to &quot;5.2 Diagrama de flux&quot;">​</a></h2><p>El diagrama de flux és una tècnica que representa els elements dels algoritmes utilitzant símbols connectats entre ells.</p><p>Els símbols bàsics que equivalen als elements d&#39;un algoritme són els següents:</p><ul><li><strong>Les línies</strong> connecten els símbols per a indicar la seqüència de les accions en l&#39;algoritme.</li><li><strong>Els rectangles</strong> representen les accions.</li><li><strong>Els paral·lelograms</strong> representen les operacions d&#39;entrada/eixida.</li><li><strong>Els rombes</strong> representen les decisions i repeticions.</li></ul><h3 id="_2-2-1-importancia-dels-diagrames-de-flux" tabindex="-1">2.2.1 Importància dels diagrames de flux <a class="header-anchor" href="#_2-2-1-importancia-dels-diagrames-de-flux" aria-label="Permalink to &quot;2.2.1 Importància dels diagrames de flux&quot;">​</a></h3><ul><li><strong>Visualització clara</strong>: Permeten entendre ràpidament la lògica d&#39;un Algoritme.</li><li><strong>Comunicació efectiva</strong>: Faciliten l&#39;explicació de processos a altres programadors o stakeholders.</li><li><strong>Planificació</strong>: Ajuden a identificar possibles problemes o ineficiències abans de començar a codificar.</li><li><strong>Documentació</strong>: Serveixen com a referència visual per al manteniment i millora del codi.</li></ul><div class="tip custom-block"><p class="custom-block-title">Conceptes clau per recordar</p><ul><li><strong>Pseudocodi</strong>: Representació d&#39;algoritmes en llenguatge natural.</li><li><strong>Diagrama de flux</strong>: Representació gràfica d&#39;algoritmes amb símbols.</li><li><strong>Símbols bàsics</strong>: Línies, rectangles, paral·lelograms i rombes.</li></ul></div>',7))])}const v=u(d,[["render",m]]);export{h as __pageData,v as default};
